{- This module was autogenerated. Please don't edit. -}
module MUI.Core.Breadcrumbs where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_nav) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

type BreadcrumbsClassesGenericRow a
  = ( li :: a
    , ol :: a
    , root :: a
    , separator :: a
    )

type BreadcrumbsClassesKey
  = BreadcrumbsClassesGenericRow String

type BreadcrumbsClassesJSS
  = BreadcrumbsClassesGenericRow JSS

type BreadcrumbsOptPropsRow (r :: # Type)
  = ( children :: Array JSX
    , classes :: { | BreadcrumbsClassesKey }
    , component :: Foreign.Foreign
    , expandText :: String
    , itemsAfterCollapse :: Number
    , itemsBeforeCollapse :: Number
    , maxItems :: Number
    , ref :: Foreign.Foreign
    , separator :: JSX
    | r
    )

type BreadcrumbsReqPropsRow (r :: # Type)
  = r

type BreadcrumbsPropsRow (r :: # Type)
  = BreadcrumbsOptPropsRow (BreadcrumbsReqPropsRow r)

foreign import _UnsafeBreadcrumbs :: forall componentProps. ReactComponent { | BreadcrumbsPropsRow componentProps }

_Breadcrumbs ::
  forall given optionalGiven optionalMissing props required.
  Nub' (BreadcrumbsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (BreadcrumbsPropsRow React.Basic.DOM.Props_nav) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_Breadcrumbs = unsafeCoerce _UnsafeBreadcrumbs

breadcrumbs ::
  forall given optionalGiven optionalMissing props required.
  Nub' (BreadcrumbsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (BreadcrumbsPropsRow React.Basic.DOM.Props_nav) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
breadcrumbs props = element _Breadcrumbs props

breadcrumbsWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (BreadcrumbsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (BreadcrumbsPropsRow React.Basic.DOM.Props_nav) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ BreadcrumbsClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
breadcrumbsWithStyles style props = element (withStyles' style _Breadcrumbs) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data BreadcrumbsProps :: Type

breadcrumbsProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (BreadcrumbsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (BreadcrumbsPropsRow React.Basic.DOM.Props_nav) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> BreadcrumbsProps
breadcrumbsProps = unsafeCoerce
