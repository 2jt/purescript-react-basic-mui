{- This module was autogenerated. Please don't edit. -}

module MUI.Core.Fab where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.ButtonBase (ButtonBasePropsRow, ButtonBaseReqPropsRow) as MUI.Core.ButtonBase
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_button) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data Color :: Type

color::{ 
  default :: Color,
  inherit :: Color,
  primary :: Color,
  secondary :: Color
 }
color = { default: unsafeCoerce "default", inherit: unsafeCoerce "inherit", primary: unsafeCoerce "primary", secondary: unsafeCoerce "secondary" }

foreign import data Size :: Type

size::{ 
  large :: Size,
  medium :: Size,
  small :: Size
 }
size = { large: unsafeCoerce "large", medium: unsafeCoerce "medium", small: unsafeCoerce "small" }

foreign import data Variant :: Type

variant::{ 
  extended :: Variant,
  round :: Variant
 }
variant = { extended: unsafeCoerce "extended", round: unsafeCoerce "round" }

instance eqVariant :: Eq Variant where
  eq = unsafeRefEq

instance eqSize :: Eq Size where
  eq = unsafeRefEq

instance eqColor :: Eq Color where
  eq = unsafeRefEq

type FabClassesGenericRow a =
  ( 
    colorInherit :: a,
    disabled :: a,
    extended :: a,
    focusVisible :: a,
    label :: a,
    primary :: a,
    root :: a,
    secondary :: a,
    sizeMedium :: a,
    sizeSmall :: a
   )

type FabClassesKey  =
  FabClassesGenericRow String

type FabClassesJSS  =
  FabClassesGenericRow JSS

type FabOptPropsRow (r :: # Type) =
  ( 
    classes :: {   | FabClassesKey  },
    color :: Color,
    component :: Foreign.Foreign,
    disableFocusRipple :: Boolean,
    disableRipple :: Boolean,
    disabled :: Boolean,
    href :: String,
    ref :: Foreign.Foreign,
    size :: Size,
    variant :: Variant
   | r
   )

type FabReqPropsRow (r :: # Type) =
  ( 
    children :: Array  JSX
   | r
   )

type FabPropsRow (r :: # Type) =
  FabOptPropsRow (FabReqPropsRow r)

foreign import _UnsafeFab :: forall componentProps.    ReactComponent {   | FabPropsRow componentProps  }

_Fab::forall given optionalGiven optionalMissing props required. 
  Nub' (FabReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FabPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent {   | given  }
_Fab = unsafeCoerce _UnsafeFab

fab::forall given optionalGiven optionalMissing props required. 
  Nub' (FabReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FabPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  {   | given  }  ->  JSX
fab props = element _Fab props

fabWithStyles::forall jss_ jss given optionalGiven optionalMissing props required. 
  Nub' (FabReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FabPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ FabClassesJSS =>
  (MUI.Core.Styles.Theme  ->  {   | jss  })  ->  {   | given  }  ->  JSX
fabWithStyles style props = element (withStyles' style _Fab) props
  where
    withStyles'::(MUI.Core.Styles.Theme  ->  {   | jss  })  ->  ReactComponent {   | given  }  ->  ReactComponent {   | given  }
    withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data FabProps :: Type

fabProps::forall given optionalGiven optionalMissing props required. 
  Nub' (FabReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (FabPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  {   | given  }  ->  FabProps
fabProps = unsafeCoerce