{- This module was autogenerated. Please don't edit. -}
module MUI.Core.DialogActions where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

type DialogActionsClassesGenericRow a
  = ( root :: a
    , spacing :: a
    )

type DialogActionsClassesKey
  = DialogActionsClassesGenericRow String

type DialogActionsClassesJSS
  = DialogActionsClassesGenericRow JSS

type DialogActionsOptPropsRow (r :: # Type)
  = ( children :: Array JSX
    , classes :: { | DialogActionsClassesKey }
    , disableSpacing :: Boolean
    , ref :: Foreign.Foreign
    | r
    )

type DialogActionsReqPropsRow (r :: # Type)
  = r

type DialogActionsPropsRow (r :: # Type)
  = DialogActionsOptPropsRow (DialogActionsReqPropsRow r)

foreign import _UnsafeDialogActions :: forall componentProps. ReactComponent { | DialogActionsPropsRow componentProps }

_DialogActions ::
  forall given optionalGiven optionalMissing props required.
  Nub' (DialogActionsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogActionsPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_DialogActions = unsafeCoerce _UnsafeDialogActions

dialogActions ::
  forall given optionalGiven optionalMissing props required.
  Nub' (DialogActionsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogActionsPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
dialogActions props = element _DialogActions props

dialogActionsWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (DialogActionsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogActionsPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ DialogActionsClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
dialogActionsWithStyles style props = element (withStyles' style _DialogActions) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data DialogActionsProps :: Type

dialogActionsProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (DialogActionsReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogActionsPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> DialogActionsProps
dialogActionsProps = unsafeCoerce
