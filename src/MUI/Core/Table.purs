{- This module was autogenerated. Please don't edit. -}
module MUI.Core.Table where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data Padding :: Type

padding ::
  { checkbox :: Padding
  , default :: Padding
  , none :: Padding
  }
padding = { checkbox: unsafeCoerce "checkbox", default: unsafeCoerce "default", none: unsafeCoerce "none" }

foreign import data Size :: Type

size ::
  { medium :: Size
  , small :: Size
  }
size = { medium: unsafeCoerce "medium", small: unsafeCoerce "small" }

instance eqSize :: Eq Size where
  eq = unsafeRefEq

instance eqPadding :: Eq Padding where
  eq = unsafeRefEq

type TableClassesGenericRow a
  = ( root :: a
    , stickyHeader :: a
    )

type TableClassesKey
  = TableClassesGenericRow String

type TableClassesJSS
  = TableClassesGenericRow JSS

type TableOptPropsRow (r :: # Type)
  = ( children :: Array JSX
    , classes :: { | TableClassesKey }
    , padding :: Padding
    , ref :: Foreign.Foreign
    , size :: Size
    , stickyHeader :: Boolean
    | r
    )

type TableReqPropsRow (r :: # Type)
  = r

type TablePropsRow (r :: # Type)
  = TableOptPropsRow (TableReqPropsRow r)

foreign import _UnsafeTable :: forall componentProps. ReactComponent { | TablePropsRow componentProps }

_Table ::
  forall given optionalGiven optionalMissing props required.
  Nub' (TableReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TablePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_Table = unsafeCoerce _UnsafeTable

table ::
  forall given optionalGiven optionalMissing props required.
  Nub' (TableReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TablePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
table props = element _Table props

tableWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (TableReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TablePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ TableClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
tableWithStyles style props = element (withStyles' style _Table) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data TableProps :: Type

tableProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (TableReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TablePropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> TableProps
tableProps = unsafeCoerce
