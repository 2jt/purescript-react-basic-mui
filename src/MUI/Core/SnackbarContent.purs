{- This module was autogenerated. Please don't edit. -}
module MUI.Core.SnackbarContent where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.Paper (PaperPropsRow, PaperReqPropsRow) as MUI.Core.Paper
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

type SnackbarContentClassesGenericRow a
  = ( action :: a
    , message :: a
    , root :: a
    )

type SnackbarContentClassesKey
  = SnackbarContentClassesGenericRow String

type SnackbarContentClassesJSS
  = SnackbarContentClassesGenericRow JSS

type SnackbarContentOptPropsRow (r :: # Type)
  = ( action :: JSX
    , classes :: { | SnackbarContentClassesKey }
    , message :: JSX
    , ref :: Foreign.Foreign
    , role :: String
    | r
    )

type SnackbarContentReqPropsRow (r :: # Type)
  = r

type SnackbarContentPropsRow (r :: # Type)
  = SnackbarContentOptPropsRow (SnackbarContentReqPropsRow r)

foreign import _UnsafeSnackbarContent :: forall componentProps. ReactComponent { | SnackbarContentPropsRow componentProps }

_SnackbarContent ::
  forall given optionalGiven optionalMissing props required.
  Nub' (SnackbarContentReqPropsRow (MUI.Core.Paper.PaperReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (SnackbarContentPropsRow (MUI.Core.Paper.PaperPropsRow React.Basic.DOM.Props_div)) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_SnackbarContent = unsafeCoerce _UnsafeSnackbarContent

snackbarContent ::
  forall given optionalGiven optionalMissing props required.
  Nub' (SnackbarContentReqPropsRow (MUI.Core.Paper.PaperReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (SnackbarContentPropsRow (MUI.Core.Paper.PaperPropsRow React.Basic.DOM.Props_div)) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
snackbarContent props = element _SnackbarContent props

snackbarContentWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (SnackbarContentReqPropsRow (MUI.Core.Paper.PaperReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (SnackbarContentPropsRow (MUI.Core.Paper.PaperPropsRow React.Basic.DOM.Props_div)) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ SnackbarContentClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
snackbarContentWithStyles style props = element (withStyles' style _SnackbarContent) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data SnackbarContentProps :: Type

snackbarContentProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (SnackbarContentReqPropsRow (MUI.Core.Paper.PaperReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (SnackbarContentPropsRow (MUI.Core.Paper.PaperPropsRow React.Basic.DOM.Props_div)) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> SnackbarContentProps
snackbarContentProps = unsafeCoerce
