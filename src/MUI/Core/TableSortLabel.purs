{- This module was autogenerated. Please don't edit. -}
module MUI.Core.TableSortLabel where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.ButtonBase (ButtonBasePropsRow, ButtonBaseReqPropsRow) as MUI.Core.ButtonBase
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_button) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data Direction :: Type

direction ::
  { asc :: Direction
  , desc :: Direction
  }
direction = { asc: unsafeCoerce "asc", desc: unsafeCoerce "desc" }

instance eqDirection :: Eq Direction where
  eq = unsafeRefEq

type TableSortLabelClassesGenericRow a
  = ( active :: a
    , icon :: a
    , iconDirectionAsc :: a
    , iconDirectionDesc :: a
    , root :: a
    )

type TableSortLabelClassesKey
  = TableSortLabelClassesGenericRow String

type TableSortLabelClassesJSS
  = TableSortLabelClassesGenericRow JSS

type TableSortLabelOptPropsRow (r :: # Type)
  = ( "IconComponent" :: Foreign.Foreign
    , active :: Boolean
    , children :: Array JSX
    , classes :: { | TableSortLabelClassesKey }
    , direction :: Direction
    , hideSortIcon :: Boolean
    , ref :: Foreign.Foreign
    | r
    )

type TableSortLabelReqPropsRow (r :: # Type)
  = r

type TableSortLabelPropsRow (r :: # Type)
  = TableSortLabelOptPropsRow (TableSortLabelReqPropsRow r)

foreign import _UnsafeTableSortLabel :: forall componentProps. ReactComponent { | TableSortLabelPropsRow componentProps }

_TableSortLabel ::
  forall given optionalGiven optionalMissing props required.
  Nub' (TableSortLabelReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TableSortLabelPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_TableSortLabel = unsafeCoerce _UnsafeTableSortLabel

tableSortLabel ::
  forall given optionalGiven optionalMissing props required.
  Nub' (TableSortLabelReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TableSortLabelPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
tableSortLabel props = element _TableSortLabel props

tableSortLabelWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (TableSortLabelReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TableSortLabelPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ TableSortLabelClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
tableSortLabelWithStyles style props = element (withStyles' style _TableSortLabel) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data TableSortLabelProps :: Type

tableSortLabelProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (TableSortLabelReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ())) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (TableSortLabelPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button)) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> TableSortLabelProps
tableSortLabelProps = unsafeCoerce
