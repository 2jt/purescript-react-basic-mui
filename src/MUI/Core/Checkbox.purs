{- This module was autogenerated. Please don't edit. -}

module MUI.Core.Checkbox where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.ButtonBase (ButtonBasePropsRow, ButtonBaseReqPropsRow) as MUI.Core.ButtonBase
import MUI.Core.IconButton (IconButtonPropsRow, IconButtonReqPropsRow) as MUI.Core.IconButton
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prelude
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_button) as React.Basic.DOM
import React.Basic.Events (EventHandler) as React.Basic.Events
import Unsafe.Coerce (unsafeCoerce)
import Unsafe.Reference (unsafeRefEq)

foreign import data Color :: Type

color::{ 
  default :: Color,
  primary :: Color,
  secondary :: Color
 }
color = { default: unsafeCoerce "default", primary: unsafeCoerce "primary", secondary: unsafeCoerce "secondary" }

foreign import data Size :: Type

size::{ 
  medium :: Size,
  small :: Size
 }
size = { medium: unsafeCoerce "medium", small: unsafeCoerce "small" }

instance eqSize :: Eq Size where
  eq = unsafeRefEq

instance eqColor :: Eq Color where
  eq = unsafeRefEq

type CheckboxClassesGenericRow a =
  ( 
    checked :: a,
    colorPrimary :: a,
    colorSecondary :: a,
    disabled :: a,
    indeterminate :: a,
    input :: a,
    root :: a
   )

type CheckboxClassesKey  =
  CheckboxClassesGenericRow String

type CheckboxClassesJSS  =
  CheckboxClassesGenericRow JSS

type CheckboxOptPropsRow (r :: # Type) =
  ( 
    checked :: Boolean,
    checkedIcon :: JSX,
    classes :: {   | CheckboxClassesKey  },
    color :: Color,
    disableRipple :: Boolean,
    disabled :: Boolean,
    icon :: JSX,
    id :: String,
    indeterminate :: Boolean,
    indeterminateIcon :: JSX,
    inputProps :: Foreign.Foreign,
    inputRef :: Foreign.Foreign,
    onChange :: React.Basic.Events.EventHandler,
    ref :: Foreign.Foreign,
    required :: Boolean,
    size :: Size,
    value :: Foreign.Foreign
   | r
   )

type CheckboxReqPropsRow (r :: # Type) =
  r

type CheckboxPropsRow (r :: # Type) =
  CheckboxOptPropsRow (CheckboxReqPropsRow r)

foreign import _UnsafeCheckbox :: forall componentProps.    ReactComponent {   | CheckboxPropsRow componentProps  }

_Checkbox::forall given optionalGiven optionalMissing props required. 
  Nub' (CheckboxReqPropsRow (MUI.Core.IconButton.IconButtonReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ()))) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CheckboxPropsRow (MUI.Core.IconButton.IconButtonPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button))) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent {   | given  }
_Checkbox = unsafeCoerce _UnsafeCheckbox

checkbox::forall given optionalGiven optionalMissing props required. 
  Nub' (CheckboxReqPropsRow (MUI.Core.IconButton.IconButtonReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ()))) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CheckboxPropsRow (MUI.Core.IconButton.IconButtonPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button))) props =>
  Prim.Row.Union given optionalMissing props =>
  {   | given  }  ->  JSX
checkbox props = element _Checkbox props

checkboxWithStyles::forall jss_ jss given optionalGiven optionalMissing props required. 
  Nub' (CheckboxReqPropsRow (MUI.Core.IconButton.IconButtonReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ()))) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CheckboxPropsRow (MUI.Core.IconButton.IconButtonPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button))) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ CheckboxClassesJSS =>
  (MUI.Core.Styles.Theme  ->  {   | jss  })  ->  {   | given  }  ->  JSX
checkboxWithStyles style props = element (withStyles' style _Checkbox) props
  where
    withStyles'::(MUI.Core.Styles.Theme  ->  {   | jss  })  ->  ReactComponent {   | given  }  ->  ReactComponent {   | given  }
    withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data CheckboxProps :: Type

checkboxProps::forall given optionalGiven optionalMissing props required. 
  Nub' (CheckboxReqPropsRow (MUI.Core.IconButton.IconButtonReqPropsRow (MUI.Core.ButtonBase.ButtonBaseReqPropsRow ()))) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (CheckboxPropsRow (MUI.Core.IconButton.IconButtonPropsRow (MUI.Core.ButtonBase.ButtonBasePropsRow React.Basic.DOM.Props_button))) props =>
  Prim.Row.Union given optionalMissing props =>
  {   | given  }  ->  CheckboxProps
checkboxProps = unsafeCoerce