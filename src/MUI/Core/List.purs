{- This module was autogenerated. Please don't edit. -}
module MUI.Core.List where

import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_ul) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

type ListClassesGenericRow a
  = ( dense :: a
    , padding :: a
    , root :: a
    , subheader :: a
    )

type ListClassesKey
  = ListClassesGenericRow String

type ListClassesJSS
  = ListClassesGenericRow JSS

type ListOptPropsRow (r :: #Type)
  = ( children :: Array JSX
    , classes :: { | ListClassesKey }
    , dense :: Boolean
    , disablePadding :: Boolean
    , subheader :: JSX
    | r
    )

type ListReqPropsRow (r :: #Type)
  = r

type ListPropsRow (r :: #Type)
  = ListOptPropsRow (ListReqPropsRow r)

foreign import _UnsafeList :: forall componentProps. ReactComponent { | ListPropsRow componentProps }

_List ::
  forall given optionalGiven optionalMissing props required.
  Nub' (ListReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListPropsRow React.Basic.DOM.Props_ul) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_List = unsafeCoerce _UnsafeList

list ::
  forall given optionalGiven optionalMissing props required.
  Nub' (ListReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListPropsRow React.Basic.DOM.Props_ul) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
list props = element _List props

listWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (ListReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListPropsRow React.Basic.DOM.Props_ul) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ ListClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
listWithStyles style props = element (withStyles' style _List) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data ListProps :: Type

listProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (ListReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (ListPropsRow React.Basic.DOM.Props_ul) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> ListProps
listProps = unsafeCoerce
