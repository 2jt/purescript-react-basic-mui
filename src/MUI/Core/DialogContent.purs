{- This module was autogenerated. Please don't edit. -}
module MUI.Core.DialogContent where

import Foreign (Foreign) as Foreign
import MUI.Core (JSS, class Nub')
import MUI.Core.Styles (Theme, withStyles) as MUI.Core.Styles
import Prim.Row (class Union) as Prim.Row
import React.Basic (JSX, ReactComponent, element)
import React.Basic.DOM (Props_div) as React.Basic.DOM
import Unsafe.Coerce (unsafeCoerce)

type DialogContentClassesGenericRow a
  = ( dividers :: a
    , root :: a
    )

type DialogContentClassesKey
  = DialogContentClassesGenericRow String

type DialogContentClassesJSS
  = DialogContentClassesGenericRow JSS

type DialogContentOptPropsRow (r :: # Type)
  = ( children :: Array JSX
    , classes :: { | DialogContentClassesKey }
    , dividers :: Boolean
    , ref :: Foreign.Foreign
    | r
    )

type DialogContentReqPropsRow (r :: # Type)
  = r

type DialogContentPropsRow (r :: # Type)
  = DialogContentOptPropsRow (DialogContentReqPropsRow r)

foreign import _UnsafeDialogContent :: forall componentProps. ReactComponent { | DialogContentPropsRow componentProps }

_DialogContent ::
  forall given optionalGiven optionalMissing props required.
  Nub' (DialogContentReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogContentPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  ReactComponent { | given }
_DialogContent = unsafeCoerce _UnsafeDialogContent

dialogContent ::
  forall given optionalGiven optionalMissing props required.
  Nub' (DialogContentReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogContentPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> JSX
dialogContent props = element _DialogContent props

dialogContentWithStyles ::
  forall jss_ jss given optionalGiven optionalMissing props required.
  Nub' (DialogContentReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogContentPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  Prim.Row.Union jss jss_ DialogContentClassesJSS =>
  (MUI.Core.Styles.Theme -> { | jss }) -> { | given } -> JSX
dialogContentWithStyles style props = element (withStyles' style _DialogContent) props
  where
  withStyles' :: (MUI.Core.Styles.Theme -> { | jss }) -> ReactComponent { | given } -> ReactComponent { | given }
  withStyles' = unsafeCoerce MUI.Core.Styles.withStyles

foreign import data DialogContentProps :: Type

dialogContentProps ::
  forall given optionalGiven optionalMissing props required.
  Nub' (DialogContentReqPropsRow ()) required =>
  Prim.Row.Union required optionalGiven given =>
  Nub' (DialogContentPropsRow React.Basic.DOM.Props_div) props =>
  Prim.Row.Union given optionalMissing props =>
  { | given } -> DialogContentProps
dialogContentProps = unsafeCoerce
